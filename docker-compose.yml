version: '3.1'
services:
  mongo:
    image: mongo
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db


  mongo-express:
    image: mongo-express
    restart: always
    env_file:
      - .env
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - index_data:/chroma/.chroma/index
    ports:
      - 8000:8000

  api-server:
    build: 
        context: ./backend
        dockerfile: Dockerfile
    # command: gunicorn --bind 0.0.0.0:5000 app:app
    command: python app.py
    env_file:
      - .env
    ports:
      - 5000:5000
    environment:
        MONGODB_HOST: ${MONGO_HOST}
        MONGODB_USERNAME: ${MONGO_USERNAME}
        MONGODB_PASSWORD: ${MONGO_PASSWORD}
        OPENAI_API_KEY: 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
        SERPAPI_API_KEY: ${SERPAPI_API_KEY}
    volumes:
        - server_data:/app/documents
        - server_data:/app/resources
    depends_on: 
        - mongo
        - chroma
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    # volumes:
    #   - ./front:/usr/src/app
    depends_on:
      - api-server
volumes:
  mongodb_data:
    external: true
  server_data:
    external: true
  index_data:
    external: true
  
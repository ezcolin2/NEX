{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Son\\\\Desktop\\\\\\uBBFC\\uADE0\\\\\\uD559\\uAD50 \\uC218\\uC5C5\\\\\\uC804\\uACF5\\\\ADL\\\\WTN\\\\blog\\\\src\\\\components\\\\FileUpload.js\";\n// Import React\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from 'react-filepond';\n\n// Import FilePond styles\nimport 'filepond/dist/filepond.min.css';\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n\n// Register the plugins\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// Our app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Set initial files, type 'local' means this is a file\n      // that has already been uploaded to the server (see docs)\n      files: [{\n        source: 'index.html',\n        options: {\n          type: 'local'\n        }\n      }]\n    };\n  }\n  handleInit() {\n    console.log('FilePond instance has initialised', this.pond);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(FilePond, {\n        ref: ref => this.pond = ref,\n        files: this.state.files,\n        allowMultiple: true,\n        maxFiles: 3,\n        server: \"/api\",\n        oninit: () => this.handleInit(),\n        onupdatefiles: fileItems => {\n          // Set current file objects to this.state\n          this.setState({\n            files: fileItems.map(fileItem => fileItem.file)\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// Attach App to DOM\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"names":["React","Component","ReactDOM","FilePond","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","jsxDEV","_jsxDEV","App","constructor","props","state","files","source","options","type","handleInit","console","log","pond","render","className","children","ref","allowMultiple","maxFiles","server","oninit","onupdatefiles","fileItems","setState","map","fileItem","file","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["C:/Users/Son/Desktop/민균/학교 수업/전공/ADL/WTN/blog/src/components/FileUpload.js"],"sourcesContent":["// Import React\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Import React FilePond\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\n\r\n// Import FilePond styles\r\nimport 'filepond/dist/filepond.min.css';\r\n\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\n\r\n// Register the plugins\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n// Our app\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // Set initial files, type 'local' means this is a file\r\n            // that has already been uploaded to the server (see docs)\r\n            files: [\r\n                {\r\n                    source: 'index.html',\r\n                    options: {\r\n                        type: 'local',\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    handleInit() {\r\n        console.log('FilePond instance has initialised', this.pond);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                {/* Pass FilePond properties as attributes */}\r\n                <FilePond\r\n                    ref={(ref) => (this.pond = ref)}\r\n                    files={this.state.files}\r\n                    allowMultiple={true}\r\n                    maxFiles={3}\r\n                    server=\"/api\"\r\n                    oninit={() => this.handleInit()}\r\n                    onupdatefiles={(fileItems) => {\r\n                        // Set current file objects to this.state\r\n                        this.setState({\r\n                            files: fileItems.map((fileItem) => fileItem.file),\r\n                        });\r\n                    }}\r\n                ></FilePond>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Attach App to DOM\r\nReactDOM.render(<App />, document.getElementById('root'));"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,WAAW;;AAEhC;AACA,SAASC,QAAQ,EAAEC,cAAc,QAAQ,gBAAgB;;AAEzD;AACA,OAAO,gCAAgC;;AAEvC;AACA;AACA,OAAOC,kCAAkC,MAAM,wCAAwC;AACvF,OAAOC,0BAA0B,MAAM,+BAA+B;AACtE,OAAO,sEAAsE;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAJ,cAAc,CAACC,kCAAkC,EAAEC,0BAA0B,CAAC;;AAE9E;AACA,MAAMG,GAAG,SAASR,SAAS,CAAC;EACxBS,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACT;MACA;MACAC,KAAK,EAAE,CACH;QACIC,MAAM,EAAE,YAAY;QACpBC,OAAO,EAAE;UACLC,IAAI,EAAE;QACV;MACJ,CAAC;IAET,CAAC;EACL;EAEAC,UAAUA,CAAA,EAAG;IACTC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE,IAAI,CAACC,IAAI,CAAC;EAC/D;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACIb,OAAA;MAAKc,SAAS,EAAC,KAAK;MAAAC,QAAA,eAEhBf,OAAA,CAACL,QAAQ;QACLqB,GAAG,EAAGA,GAAG,IAAM,IAAI,CAACJ,IAAI,GAAGI,GAAK;QAChCX,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAM;QACxBY,aAAa,EAAE,IAAK;QACpBC,QAAQ,EAAE,CAAE;QACZC,MAAM,EAAC,MAAM;QACbC,MAAM,EAAEA,CAAA,KAAM,IAAI,CAACX,UAAU,CAAC,CAAE;QAChCY,aAAa,EAAGC,SAAS,IAAK;UAC1B;UACA,IAAI,CAACC,QAAQ,CAAC;YACVlB,KAAK,EAAEiB,SAAS,CAACE,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI;UACpD,CAAC,CAAC;QACN;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEd;AACJ;;AAEA;AACApC,QAAQ,CAACmB,MAAM,eAACb,OAAA,CAACC,GAAG;EAAA0B,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
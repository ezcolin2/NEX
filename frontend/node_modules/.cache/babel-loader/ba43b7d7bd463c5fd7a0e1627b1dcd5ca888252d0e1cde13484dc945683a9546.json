{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Son\\\\Desktop\\\\\\uBBFC\\uADE0\\\\\\uD559\\uAD50 \\uC218\\uC5C5\\\\\\uC804\\uACF5\\\\ADL\\\\WTN\\\\blog\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chat.css';\nimport OpenAI from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [novelText, setNovelText] = useState(''); // 소설 텍스트 상태\n  const [userInput, setUserInput] = useState(''); // 사용자 입력 상태\n  const openai = new OpenAI();\n  const response = async () => await openai.createImage({\n    apikey: process.env.OPENAI_API_KEY,\n    model: \"dall-e-3\",\n    prompt: \"a white siamese cat\",\n    n: 1,\n    size: \"1024x1024\"\n  });\n  const image_url = response.data.data[0].url;\n\n  // 사용자가 질문을 보내는 함수\n  const handleSendQuestion = () => {\n    setNovelText('');\n    // 여기에서 사용자 입력에 대한 로직을 추가할 수 있습니다.\n    console.log('User Question:', userInput);\n\n    // 여기에서 소설 등장인물의 대답을 생성하는 로직을 추가할 수 있습니다.\n    const characterResponse = '소설 등장인물의 대답...';\n\n    // 소설 텍스트에 사용자 입력과 등장인물의 대답을 추가\n    setNovelText(prevText => prevText + `\\n\\n${userInput}\\n${characterResponse}`);\n\n    // 사용자 입력 초기화\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image_url,\n      alt: \"dalle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_text_box\",\n        children: novelText && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"novel_text\",\n          children: novelText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"chat_input_box\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"Enter your question..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_submit\",\n          onClick: handleSendQuestion,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icon_send\",\n            src: \"send.png\",\n            alt: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"YRqcNqV0EHqi6Z/yqQiwi3zJxu4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","Chat","_s","novelText","setNovelText","userInput","setUserInput","openai","response","createImage","apikey","process","env","OPENAI_API_KEY","model","prompt","n","size","image_url","data","url","handleSendQuestion","console","log","characterResponse","prevText","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Son/Desktop/민균/학교 수업/전공/ADL/WTN/blog/src/pages/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chat.css';\r\nimport OpenAI from \"openai\";\r\n\r\nfunction Chat() {\r\n  const [novelText, setNovelText] = useState(''); // 소설 텍스트 상태\r\n  const [userInput, setUserInput] = useState(''); // 사용자 입력 상태\r\n  const openai = new OpenAI();\r\n  const response = async () => await openai.createImage({\r\n    apikey: process.env.OPENAI_API_KEY,\r\n    model: \"dall-e-3\",\r\n    prompt: \"a white siamese cat\",\r\n    n: 1,\r\n    size: \"1024x1024\",\r\n  });\r\n  const image_url = response.data.data[0].url;\r\n\r\n  // 사용자가 질문을 보내는 함수\r\n  const handleSendQuestion = () => {\r\n    setNovelText('');\r\n    // 여기에서 사용자 입력에 대한 로직을 추가할 수 있습니다.\r\n    console.log('User Question:', userInput);\r\n\r\n    // 여기에서 소설 등장인물의 대답을 생성하는 로직을 추가할 수 있습니다.\r\n    const characterResponse = '소설 등장인물의 대답...';\r\n\r\n    // 소설 텍스트에 사용자 입력과 등장인물의 대답을 추가\r\n    setNovelText(prevText => prevText + `\\n\\n${userInput}\\n${characterResponse}`);\r\n\r\n    // 사용자 입력 초기화\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat_container\">\r\n      <img src={image_url} alt='dalle'/>\r\n      <div className='chat_box'>\r\n        <div className='chat_text_box'>\r\n          {novelText && <div className=\"novel_text\">{novelText}</div>}\r\n        </div>\r\n        <div className='chat_input'>\r\n          <textarea\r\n            className='chat_input_box'\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n            placeholder=\"Enter your question..\"\r\n          />\r\n          <button className='btn_submit' onClick={handleSendQuestion}><img className='icon_send' src='send.png' alt=\"send\" /></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}